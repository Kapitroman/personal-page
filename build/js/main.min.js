/******/ (function(modules) { // webpackBootstrap
/******/ 	// The module cache
/******/ 	var installedModules = {};
/******/
/******/ 	// The require function
/******/ 	function __webpack_require__(moduleId) {
/******/
/******/ 		// Check if module is in cache
/******/ 		if(installedModules[moduleId]) {
/******/ 			return installedModules[moduleId].exports;
/******/ 		}
/******/ 		// Create a new module (and put it into the cache)
/******/ 		var module = installedModules[moduleId] = {
/******/ 			i: moduleId,
/******/ 			l: false,
/******/ 			exports: {}
/******/ 		};
/******/
/******/ 		// Execute the module function
/******/ 		modules[moduleId].call(module.exports, module, module.exports, __webpack_require__);
/******/
/******/ 		// Flag the module as loaded
/******/ 		module.l = true;
/******/
/******/ 		// Return the exports of the module
/******/ 		return module.exports;
/******/ 	}
/******/
/******/
/******/ 	// expose the modules object (__webpack_modules__)
/******/ 	__webpack_require__.m = modules;
/******/
/******/ 	// expose the module cache
/******/ 	__webpack_require__.c = installedModules;
/******/
/******/ 	// define getter function for harmony exports
/******/ 	__webpack_require__.d = function(exports, name, getter) {
/******/ 		if(!__webpack_require__.o(exports, name)) {
/******/ 			Object.defineProperty(exports, name, { enumerable: true, get: getter });
/******/ 		}
/******/ 	};
/******/
/******/ 	// define __esModule on exports
/******/ 	__webpack_require__.r = function(exports) {
/******/ 		if(typeof Symbol !== 'undefined' && Symbol.toStringTag) {
/******/ 			Object.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });
/******/ 		}
/******/ 		Object.defineProperty(exports, '__esModule', { value: true });
/******/ 	};
/******/
/******/ 	// create a fake namespace object
/******/ 	// mode & 1: value is a module id, require it
/******/ 	// mode & 2: merge all properties of value into the ns
/******/ 	// mode & 4: return value when already ns object
/******/ 	// mode & 8|1: behave like require
/******/ 	__webpack_require__.t = function(value, mode) {
/******/ 		if(mode & 1) value = __webpack_require__(value);
/******/ 		if(mode & 8) return value;
/******/ 		if((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;
/******/ 		var ns = Object.create(null);
/******/ 		__webpack_require__.r(ns);
/******/ 		Object.defineProperty(ns, 'default', { enumerable: true, value: value });
/******/ 		if(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));
/******/ 		return ns;
/******/ 	};
/******/
/******/ 	// getDefaultExport function for compatibility with non-harmony modules
/******/ 	__webpack_require__.n = function(module) {
/******/ 		var getter = module && module.__esModule ?
/******/ 			function getDefault() { return module['default']; } :
/******/ 			function getModuleExports() { return module; };
/******/ 		__webpack_require__.d(getter, 'a', getter);
/******/ 		return getter;
/******/ 	};
/******/
/******/ 	// Object.prototype.hasOwnProperty.call
/******/ 	__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };
/******/
/******/ 	// __webpack_public_path__
/******/ 	__webpack_require__.p = "";
/******/
/******/
/******/ 	// Load entry module and return exports
/******/ 	return __webpack_require__(__webpack_require__.s = "./js/main.js");
/******/ })
/************************************************************************/
/******/ ({

/***/ "./js/main.js":
/*!********************!*\
  !*** ./js/main.js ***!
  \********************/
/*! no exports provided */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony import */ var _utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./utils/ios-vh-fix */ "./js/utils/ios-vh-fix.js");
/* harmony import */ var _utils_scroll_lock__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! ./utils/scroll-lock */ "./js/utils/scroll-lock.js");
/* harmony import */ var _modules_move_to__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! ./modules/move-to */ "./js/modules/move-to.js");
/* harmony import */ var _modules_navigation_changer__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! ./modules/navigation-changer */ "./js/modules/navigation-changer.js");
/* harmony import */ var _modules_init_burger_menu__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! ./modules/init-burger-menu */ "./js/modules/init-burger-menu.js");

 //import {initModals} from './modules/modals/init-modals';
//import {initCustomSelect} from './modules/form/init-custom-select';
//import {initFormValidate} from './modules/form/init-form-validate';



 // ---------------------------------

window.addEventListener('DOMContentLoaded', function () {
  // Utils
  // ---------------------------------
  Object(_utils_ios_vh_fix__WEBPACK_IMPORTED_MODULE_0__["iosVhFix"])(); // Modules
  // ---------------------------------
  // все скрипты должны быть в обработчике 'DOMContentLoaded', но не все в 'load'
  // в load следует добавить скрипты, не участвующие в работе первого экрана

  window.addEventListener('load', function () {
    //initModals();
    //initCustomSelect();
    //initFormValidate();
    var navigationChanger = new _modules_navigation_changer__WEBPACK_IMPORTED_MODULE_3__["NavigationChanger"]();
    navigationChanger.init();
    Object(_modules_init_burger_menu__WEBPACK_IMPORTED_MODULE_4__["initBurgerMenu"])();
  });
}); // ---------------------------------
// ❗❗❗ обязательно установите плагины eslint, stylelint, editorconfig в редактор кода.
// привязывайте js не на классы, а на дата атрибуты (data-validate)
// вместо модификаторов .block--active используем утилитарные классы
// .is-active || .is-open || .is-invalid и прочие (обязателен нейминг в два слова)
// .select.select--opened ❌ ---> [data-select].is-open ✅
// выносим все в дата атрибуты
// url до иконок пинов карты, настройки автопрокрутки слайдера, url к json и т.д.
// для адаптивного JS используейтся matchMedia и addListener
// const breakpoint = window.matchMedia(`(min-width:1024px)`);
// const breakpointChecker = () => {
//   if (breakpoint.matches) {
//   } else {
//   }
// };
// breakpoint.addListener(breakpointChecker);
// breakpointChecker();
// используйте .closest(el)

/***/ }),

/***/ "./js/modules/init-burger-menu.js":
/*!****************************************!*\
  !*** ./js/modules/init-burger-menu.js ***!
  \****************************************/
/*! exports provided: initBurgerMenu */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "initBurgerMenu", function() { return initBurgerMenu; });
var header = document.querySelector('.header');
var breakpoint = window.matchMedia('(min-width:768px)');

var initBurgerMenu = function initBurgerMenu() {
  if (!header) {
    return;
  }

  var navigationList = header.querySelector('.navigation-changer__list');
  var navigationButton = header.querySelector('.navigation-changer__toggle');

  var closeMenu = function closeMenu() {
    navigationButton.ariaPressed = 'false';
    header.classList.remove('is-opened');
    header.classList.add('is-closed');
    navigationList.style.setProperty('height', '0');
    navigationList.removeEventListener('click', clickOnList);
    window.scrollLock.enableScrolling();
  };

  var clickOnList = function clickOnList(evt) {
    if (evt.target.closest('a')) {
      closeMenu();
    }
  };

  var openMenu = function openMenu() {
    navigationButton.ariaPressed = 'true';
    header.classList.remove('is-closed');
    header.classList.add('is-opened');
    var height = navigationList.scrollHeight;
    navigationList.style.setProperty('height', height + 'px');
    navigationList.addEventListener('click', clickOnList);
    window.scrollLock.disableScrolling();
  };

  var clickOnMenu = function clickOnMenu() {
    if (navigationButton.ariaPressed === 'true') {
      closeMenu();
    } else {
      openMenu();
    }
  };

  var breakpointChecker = function breakpointChecker() {
    if (breakpoint.matches) {
      if (navigationButton.ariaPressed === 'true') {
        closeMenu();
      }

      navigationList.style.setProperty('height', 'auto');
    } else {
      navigationButton.addEventListener('click', clickOnMenu);
      navigationList.style.setProperty('height', '0');
    }
  };

  breakpoint.addListener(breakpointChecker);
  breakpointChecker();
};



/***/ }),

/***/ "./js/modules/move-to.js":
/*!*******************************!*\
  !*** ./js/modules/move-to.js ***!
  \*******************************/
/*! exports provided: default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
var moveTo = function moveTo() {
  var MoveTo = function () {
    /**
     * Defaults
     * @type {object}
     */
    var defaults = {
      tolerance: 0,
      duration: 800,
      easing: 'easeOutQuart',
      container: window,
      callback: function callback() {}
    };
    /**
     * easeOutQuart Easing Function
     * @param  {number} t - current time
     * @param  {number} b - start value
     * @param  {number} c - change in value
     * @param  {number} d - duration
     * @return {number} - calculated value
     */

    function easeOutQuart(t, b, c, d) {
      t /= d;
      t--;
      return -c * (t * t * t * t - 1) + b;
    }
    /**
     * Merge two object
     *
     * @param  {object} obj1
     * @param  {object} obj2
     * @return {object} merged object
     */


    function mergeObject(obj1, obj2) {
      var obj3 = {};
      Object.keys(obj1).forEach(function (propertyName) {
        obj3[propertyName] = obj1[propertyName];
      });
      Object.keys(obj2).forEach(function (propertyName) {
        obj3[propertyName] = obj2[propertyName];
      });
      return obj3;
    }

    ;
    /**
     * Converts camel case to kebab case
     * @param  {string} val the value to be converted
     * @return {string} the converted value
     */

    function kebabCase(val) {
      return val.replace(/([A-Z])/g, function ($1) {
        return '-' + $1.toLowerCase();
      });
    }

    ;
    /**
     * Count a number of item scrolled top
     * @param  {Window|HTMLElement} container
     * @return {number}
     */

    function countScrollTop(container) {
      if (container instanceof HTMLElement) {
        return container.scrollTop;
      }

      return container.pageYOffset;
    }

    ;
    /**
     * MoveTo Constructor
     * @param {object} options Options
     * @param {object} easeFunctions Custom ease functions
     */

    function MoveTo() {
      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
      var easeFunctions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
      this.options = mergeObject(defaults, options);
      this.easeFunctions = mergeObject({
        easeOutQuart: easeOutQuart
      }, easeFunctions);
    }
    /**
     * Register a dom element as trigger
     * @param  {HTMLElement} dom Dom trigger element
     * @param  {function} callback Callback function
     * @return {function|void} unregister function
     */


    MoveTo.prototype.registerTrigger = function (dom, callback) {
      var _this = this;

      if (!dom) {
        return;
      }

      var href = dom.getAttribute('href') || dom.getAttribute('data-target'); // The element to be scrolled

      var target = href && href !== '#' ? document.getElementById(href.substring(1)) : document.body;
      var options = mergeObject(this.options, _getOptionsFromTriggerDom(dom, this.options));

      if (typeof callback === 'function') {
        options.callback = callback;
      }

      var listener = function listener(e) {
        e.preventDefault();

        _this.move(target, options);
      };

      dom.addEventListener('click', listener, false);
      return function () {
        return dom.removeEventListener('click', listener, false);
      };
    };
    /**
     * Move
     * Scrolls to given element by using easeOutQuart function
     * @param  {HTMLElement|number} target Target element to be scrolled or target position
     * @param  {object} options Custom options
     */


    MoveTo.prototype.move = function (target) {
      var _this2 = this;

      var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};

      if (target !== 0 && !target) {
        return;
      }

      options = mergeObject(this.options, options);
      var distance = typeof target === 'number' ? target : target.getBoundingClientRect().top;
      var from = countScrollTop(options.container);
      var startTime = null;
      var lastYOffset;
      distance -= options.tolerance; // rAF loop

      var loop = function loop(currentTime) {
        var currentYOffset = countScrollTop(_this2.options.container);

        if (!startTime) {
          // To starts time from 1, we subtracted 1 from current time
          // If time starts from 1 The first loop will not do anything,
          // because easing value will be zero
          startTime = currentTime - 1;
        }

        var timeElapsed = currentTime - startTime;

        if (lastYOffset) {
          if (distance > 0 && lastYOffset > currentYOffset || distance < 0 && lastYOffset < currentYOffset) {
            return options.callback(target);
          }
        }

        lastYOffset = currentYOffset;

        var val = _this2.easeFunctions[options.easing](timeElapsed, from, distance, options.duration);

        options.container.scroll(0, val);

        if (timeElapsed < options.duration) {
          window.requestAnimationFrame(loop);
        } else {
          options.container.scroll(0, distance + from);
          options.callback(target);
        }
      };

      window.requestAnimationFrame(loop);
    };
    /**
     * Adds custom ease function
     * @param {string}   name Ease function name
     * @param {function} fn   Ease function
     */


    MoveTo.prototype.addEaseFunction = function (name, fn) {
      this.easeFunctions[name] = fn;
    };
    /**
     * Returns options which created from trigger dom element
     * @param  {HTMLElement} dom Trigger dom element
     * @param  {object} options The instance's options
     * @return {object} The options which created from trigger dom element
     */


    function _getOptionsFromTriggerDom(dom, options) {
      var domOptions = {};
      Object.keys(options).forEach(function (key) {
        var value = dom.getAttribute("data-mt-".concat(kebabCase(key)));

        if (value) {
          domOptions[key] = isNaN(value) ? value : parseInt(value, 10);
        }
      });
      return domOptions;
    }

    return MoveTo;
  }();

  window.MoveTo = MoveTo;
};

/* harmony default export */ __webpack_exports__["default"] = (moveTo());

/***/ }),

/***/ "./js/modules/navigation-changer.js":
/*!******************************************!*\
  !*** ./js/modules/navigation-changer.js ***!
  \******************************************/
/*! exports provided: NavigationChanger */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "NavigationChanger", function() { return NavigationChanger; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

var NavigationChanger = /*#__PURE__*/function () {
  function NavigationChanger() {
    _classCallCheck(this, NavigationChanger);

    this._scrollDuration = 1000;
    this._currentIndex = 0;
    this._newCurrentIndex = null;
    this._blockShift = 50;
    this._linkElements = document.querySelectorAll('[data-navigation-link]');
    this._moveTo = new window.MoveTo({
      duration: this._scrollDuration,
      easing: 'easeOutQuart'
    });
    this._documentScrollHandler = this._documentScrollHandler.bind(this);
  }

  _createClass(NavigationChanger, [{
    key: "init",
    value: function init() {
      if (!this._linkElements.length) {
        return;
      }

      this._initMoveTo();

      this._changeLinksActiveState();

      document.addEventListener('scroll', this._documentScrollHandler);
    }
  }, {
    key: "_documentScrollHandler",
    value: function _documentScrollHandler() {
      this._changeLinksActiveState();
    }
  }, {
    key: "_changeLinksActiveState",
    value: function _changeLinksActiveState() {
      var _this = this;

      this._linkElements.forEach(function (link, index) {
        var currentBlockElement = document.querySelector("".concat(link.getAttribute('href')));

        if (!currentBlockElement) {
          // eslint-disable-next-line no-console
          console.error('Блока на который ссылается ссылка не существует! Проверьте соответствие href ссылок с id блоков');
          return;
        }

        if (currentBlockElement.getBoundingClientRect().bottom > _this._blockShift && currentBlockElement.getBoundingClientRect().top <= _this._blockShift) {
          link.classList.add('is-active');
        } else {
          link.classList.remove('is-active');
        }

        if (document.body.getBoundingClientRect().bottom - window.innerHeight < _this._blockShift && currentBlockElement.getBoundingClientRect().top > _this._blockShift) {
          _this._linkElements[index - 1].classList.remove('is-active');

          link.classList.add('is-active');
        }
      });
    }
  }, {
    key: "_removeLinkAnimation",
    value: function _removeLinkAnimation() {
      var _this2 = this;

      this._linkElements.forEach(function (link, index) {
        if (index !== _this2._currentIndex && index !== _this2._newCurrentIndex) {
          link.classList.add('is-inactive');
        }
      });
    }
  }, {
    key: "_addLinkAnimation",
    value: function _addLinkAnimation() {
      this._linkElements.forEach(function (link) {
        return link.classList.remove('is-inactive');
      });

      this._currentIndex = this._newCurrentIndex;
    }
  }, {
    key: "_initMoveTo",
    value: function _initMoveTo() {
      var _this3 = this;

      this._linkElements.forEach(function (link, index) {
        link.addEventListener('click', function (evt) {
          evt.preventDefault();
          var target = document.querySelector("".concat(link.getAttribute('href')));

          if (!target) {
            // eslint-disable-next-line no-console
            console.error('Блока на который ссылается ссылка не существует! Проверьте соответствие href ссылок с id блоков');
            return;
          }

          _this3._newCurrentIndex = index;

          _this3._moveTo.move(target);

          _this3._removeLinkAnimation();

          setTimeout(function () {
            _this3._addLinkAnimation();
          }, _this3._scrollDuration);
        });
      });
    }
  }]);

  return NavigationChanger;
}();

/***/ }),

/***/ "./js/utils/ios-checker.js":
/*!*********************************!*\
  !*** ./js/utils/ios-checker.js ***!
  \*********************************/
/*! exports provided: iosChecker */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosChecker", function() { return iosChecker; });
var iosChecker = function iosChecker() {
  return ['iPad Simulator', 'iPhone Simulator', 'iPod Simulator', 'iPad', 'iPhone', 'iPod'].includes(navigator.platform) // iPad on iOS 13 detection
  || navigator.userAgent.includes('Mac') && 'ontouchend' in document;
};

/***/ }),

/***/ "./js/utils/ios-vh-fix.js":
/*!********************************!*\
  !*** ./js/utils/ios-vh-fix.js ***!
  \********************************/
/*! exports provided: iosVhFix */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "iosVhFix", function() { return iosVhFix; });
/* harmony import */ var _ios_checker__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! ./ios-checker */ "./js/utils/ios-checker.js");


var iosVhFix = function iosVhFix() {
  if (!(!!window.MSInputMethodContext && !!document.documentMode)) {
    if (Object(_ios_checker__WEBPACK_IMPORTED_MODULE_0__["iosChecker"])()) {
      var vh = window.innerHeight * 0.01;
      document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      window.addEventListener('resize', function () {
        vh = window.innerHeight * 0.01;
        document.documentElement.style.setProperty('--vh', "".concat(vh, "px"));
      });
    }
  }
};



/***/ }),

/***/ "./js/utils/scroll-lock.js":
/*!*********************************!*\
  !*** ./js/utils/scroll-lock.js ***!
  \*********************************/
/*! exports provided: ScrollLock */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ScrollLock", function() { return ScrollLock; });
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } }

function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }

//import {iosChecker} from './ios-checker';
var ScrollLock = /*#__PURE__*/function () {
  function ScrollLock() {
    _classCallCheck(this, ScrollLock);

    //this._iosChecker = iosChecker;
    //this._lockClass = this._iosChecker() ? 'scroll-lock-ios' : 'scroll-lock';
    this._lockClass = 'scroll-lock';
    this._scrollTop = null;
    this._fixedBlockElements = document.querySelectorAll('[data-fix-block]');
  }

  _createClass(ScrollLock, [{
    key: "_getScrollbarWidth",
    value: function _getScrollbarWidth() {
      return window.innerWidth - document.documentElement.clientWidth;
    }
  }, {
    key: "_getBodyScrollTop",
    value: function _getBodyScrollTop() {
      return self.pageYOffset || document.documentElement && document.documentElement.ScrollTop || document.body && document.body.scrollTop;
    }
  }, {
    key: "disableScrolling",
    value: function disableScrolling() {
      var _this = this;

      this._scrollTop = document.body.dataset.scroll = document.body.dataset.scroll ? document.body.dataset.scroll : this._getBodyScrollTop();

      if (this._getScrollbarWidth()) {
        document.body.style.paddingRight = "".concat(this._getScrollbarWidth(), "px");

        this._fixedBlockElements.forEach(function (block) {
          block.style.paddingRight = "".concat(_this._getScrollbarWidth(), "px");
        });
      }

      document.body.style.top = "-".concat(this._scrollTop, "px");
      document.body.classList.add(this._lockClass);
    }
  }, {
    key: "enableScrolling",
    value: function enableScrolling() {
      document.body.classList.remove(this._lockClass);
      window.scrollTo(0, +document.body.dataset.scroll);
      document.body.style.paddingRight = null;
      document.body.style.top = null;

      this._fixedBlockElements.forEach(function (block) {
        block.style.paddingRight = null;
      });

      document.body.removeAttribute('data-scroll');
      this._scrollTop = null;
    }
  }]);

  return ScrollLock;
}();
window.scrollLock = new ScrollLock();

/***/ })

/******/ });
//# sourceMappingURL=main.min.js.map